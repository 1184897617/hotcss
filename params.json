{"name":"hotcss","tagline":"移动端布局解决方案 --- 简洁而不简单","body":"- [hotcss](#hotcss)\r\n\t- [介绍](#介绍)\r\n\t\t- [hotcss是什么鬼](#hotcss是什么鬼)\r\n\t\t- [hotcss可以解决什么问题](#hotcss可以解决什么问题)\r\n\t- [获取](#获取)\r\n\t- [开始使用](#开始使用)\r\n\t\t- [hotcss.js](#hotcssjs)\r\n\t\t- [hotcss.less/hotcss.scss](#hotcssss)\r\n\t- [如何编译](#如何编译)\r\n\t\t- [配置gulp](#配置gulp)\r\n\t\t- [内置命令](#内置命令)\r\n\r\n# hotcss\r\n\r\n> 移动端布局解决方案  --- 简洁而不简单\r\n\r\n\r\n### 介绍\r\n\r\n#### hotcss是什么鬼\r\n\r\n`hotcss`不是一个库，亦不是一个框架。通俗点讲，这是一个解决方案。用于解决移动端布局中遇到的单位等问题。\r\n\r\n`hotcss`遵循视觉一致性原则，即不同屏幕下页面比例是一致的，同时`hotcss`不提倡使用在跨设备的开发中（当然不提倡和不可以是两个概念）。\r\n\r\n另外，为了辅助开发`hotcss`提供了gulp编译，可查看[如何编译](#如何编译)\r\n\r\n提供一个演示示例。进入`src/test/`，使用`bower`安装`hotcss`即可体验。\r\n\r\n#### hotcss可以解决什么问题\r\n\r\n- `hotcss`不需要你再手动设置`viewport`，她会根据当前环境计算出最适合的`viewport`。\r\n- 在使用`hotcss`的过程中，所有的单位应该使用px2rem，无论css中还是JS中。\r\n- 上述提到的`所有的单位`并不准确，如果你需要解决移动端1px这个世纪难题，则可以直接写1px，而无需使用px2rem。并且，这个1px在所有设备中是真的1px。\r\n- 同时`hotcss`支持单项目多设计图（设计图尺寸不一样），只需要在你的css中定义设计图尺寸即可\r\n\r\n### 获取\r\n可以使用`bower`或者`npm`来安装`hotcss`。\r\n```\r\nbower install hotcss --save\r\nnpm install hotcss --save\r\n```\r\n如果你不乐意使用这两种方法，也可以直接复制源码或者使用`git clone`等你喜欢的方式。\r\n\r\n### 开始使用\r\n\r\n#### hotcss.js\r\n引入`hotcss.js`，该JS必须在`<body>`前加载，如果能内嵌到HTML中，效果更好。当然这个JS是非常小的，只有区区几行，压缩后更是不值一提，建议使用内嵌方式直接写到`<head>`里面。\r\n```html\r\n<!-- /index.html-->\r\n<script src=\"../bower_components/hotcss/dest/hotcss.js\"></script>\r\n```\r\n注意事项:\r\n- 不能将此JS放到`<body>`后加载，或者异步加载。这样会导致加载完毕后页面一团乱，然后会有明显的视觉跳动，继而才会恢复正常。\r\n\r\n#### hotcss.**ss\r\n根据你使用的css预编译语言，将`hotcss.less`/`hotcss.scss` import到你的less/scss文件中去，然后定义你的设计图宽度`designWidth`。\r\n```javascript\r\n/*\t/src/scss/style.scss */\r\n@import '../../bower_components/hotcss/dest/hotcss.scss';\r\n$designWidth : 750;\r\n```\r\n\r\n```javascript\r\n/*\t/src/less/style.less  */\r\n@import '../../bower_components/hotcss/dest/hotcss.less';\r\n@designWidth : 750;\r\n```\r\n注意事项:\r\n- 如果你的设计图都是同样的宽度，你可以去`hotcss.**ss`中直接定义全局`designWidth`。\r\n- 每个css预编译文件都需要导入`hotcss.**ss`,如果你没有全局的`designWidth`，还需要定义`designWidth`。\r\n- 在css预编译文件中使用`px2rem(375)`，尺寸是你在设计图上测量出来的px值，无需经过任何处理。直接交给`px2rem`即可。\r\n\r\n### 如何编译\r\n\r\n作为一个解决方案，怎么可能让你自己费心再找编译方法呢，没错，这些都已经为你准备好了，你需要做的就是按步骤配置一下即可。\r\n\r\n建议开发目录，所有的开发都在src目录下进行，dev目录为开发目录，watch的时候访问此目录，release目录为发布目录\r\n```\r\n├── bower_components\r\n│   └── hotcss\r\n├── dev\r\n├── release\r\n├── src\r\n│   ├── css\r\n│   ├── img\r\n│   ├── index.html\r\n│   └── js\r\n└── tools\r\n```\r\n\r\n#### 配置gulp\r\n进入项目根目录，使用`cp`命令将`tools`文件夹复制到根目录，注意命令最后空格后有一个点。\r\n```shell\r\ncp -R bower_components/hotcss/src/tools .\r\ncp -R node_modules/hotcss/src/tools .\r\n```\r\n进入tools目录，执行`npm install`安装必需的package。\r\n```shell\r\ncd tools/\r\nnpm install\r\n```\r\n配置`tools/config.js`怎么配置在注释里面都已经写的很清楚了，如仍然遇到问题，可以与我取得联系。\r\n\r\n在`tools`目录下执行`gulp watch`\r\n\r\n<del>如果当前环境有浏览器，会自动打开`http://127.0.0.1:13097/dev/`</del>\r\n\r\n`1.0.4版本`中已经修改为自动打开`http://你的IP:13097/dev/`，方便同域下直接使用手机调试开发。\r\n\r\n\r\n\r\n享受开发的乐趣吧\r\n\r\n#### 内置命令\r\n\r\n- `gulp css`：仅编译css预编译文件。\r\n- `gulp watch-css`：仅watch css预编译文件，不会自动刷新。\r\n- `gulp watch`：watch所配置文件，自动起http服务，同时自带编译，liveload等功能。\r\n- `gulp release`：发布命令，根据配置文件编译/压缩并生成，不处理html文件。\r\n- `gulp release -html`：带上html命令，会把html一并压缩。","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}